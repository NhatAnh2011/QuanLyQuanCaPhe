/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import DAO.ProductDAO;
import MODEL.DanhMuc_model;
import MODEL.SanPham_model;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author DELL
 */
public class Product extends javax.swing.JFrame {
    List<DanhMuc_model> damhMucList = new ArrayList<>();
    DefaultTableModel tblModel = new DefaultTableModel();
    int index = 0;
    /**
     * Creates new form Product
     */
    public Product() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        tb_danhmuc = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_masp = new javax.swing.JTextField();
        txt_tensp = new javax.swing.JTextField();
        txt_giasp = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        btn_themsp = new javax.swing.JButton();
        btn_xoasp = new javax.swing.JButton();
        btn_suasp = new javax.swing.JButton();
        btn_taomoisp = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbl_sanpham = new javax.swing.JTable();
        jPanel6 = new javax.swing.JPanel();
        btn_timkiemsp = new javax.swing.JButton();
        lbGiaTu = new javax.swing.JLabel();
        lbDen = new javax.swing.JLabel();
        txt_giatu = new javax.swing.JTextField();
        txt_den = new javax.swing.JTextField();
        lbVND = new javax.swing.JLabel();
        lbVND1 = new javax.swing.JLabel();
        txt_timkiem = new javax.swing.JTextField();
        label1 = new java.awt.Label();
        txt_madmsp = new java.awt.TextField();
        btnTrangChu = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txt_madm = new javax.swing.JTextField();
        txt_tendm = new javax.swing.JTextField();
        jPanel4 = new javax.swing.JPanel();
        btn_themdm = new javax.swing.JButton();
        btn_xoadm = new javax.swing.JButton();
        btn_suadm = new javax.swing.JButton();
        btn_taomoidm = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbl_danhmuc = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb_danhmuc.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tb_danhmucAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 0, 51));
        jLabel6.setText("Mã Sản Phẩm:");

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 0, 51));
        jLabel7.setText("Tên Sản Phẩm:");

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 0, 51));
        jLabel8.setText("Mã Danh Mục:");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 0, 51));
        jLabel9.setText("Giá Sản Phẩm");

        btn_themsp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_themsp.setForeground(new java.awt.Color(0, 255, 255));
        btn_themsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Add.png"))); // NOI18N
        btn_themsp.setText("Thêm");
        btn_themsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themspActionPerformed(evt);
            }
        });

        btn_xoasp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_xoasp.setForeground(new java.awt.Color(0, 0, 255));
        btn_xoasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Delete.png"))); // NOI18N
        btn_xoasp.setText("Xóa");
        btn_xoasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoaspActionPerformed(evt);
            }
        });

        btn_suasp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_suasp.setForeground(new java.awt.Color(255, 0, 0));
        btn_suasp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/Edit.png"))); // NOI18N
        btn_suasp.setText("Sửa");
        btn_suasp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suaspActionPerformed(evt);
            }
        });

        btn_taomoisp.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_taomoisp.setForeground(new java.awt.Color(255, 255, 0));
        btn_taomoisp.setText("Tạo mới");
        btn_taomoisp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taomoispActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_themsp)
                .addGap(18, 18, 18)
                .addComponent(btn_xoasp)
                .addGap(18, 18, 18)
                .addComponent(btn_suasp)
                .addGap(18, 18, 18)
                .addComponent(btn_taomoisp)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themsp)
                    .addComponent(btn_taomoisp)
                    .addComponent(btn_suasp)
                    .addComponent(btn_xoasp))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tbl_sanpham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã sản phẩm", "Tên sản phẩm", "Mã Danh Mục", "Giá sản phẩm"
            }
        ));
        tbl_sanpham.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                tbl_sanphamAncestorAdded(evt);
            }
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        tbl_sanpham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_sanphamMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbl_sanphamMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbl_sanpham);

        btn_timkiemsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/search.png"))); // NOI18N
        btn_timkiemsp.setText("Tìm Kiếm");
        btn_timkiemsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_timkiemspActionPerformed(evt);
            }
        });

        lbGiaTu.setText("Giá từ:");

        lbDen.setText("Đến :");

        txt_giatu.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        txt_den.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        lbVND.setText("VNĐ");

        lbVND1.setText("VNĐ");

        label1.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        label1.setForeground(new java.awt.Color(255, 51, 51));
        label1.setText("Nhập tên sản phẩm vào để tìm kiếm:");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbGiaTu)
                                    .addComponent(lbDen))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_giatu)
                                    .addComponent(txt_den, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lbVND1)
                                    .addComponent(lbVND))
                                .addGap(145, 145, 145))))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btn_timkiemsp))))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addComponent(txt_timkiem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txt_giatu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVND)
                    .addComponent(lbGiaTu))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbDen)
                    .addComponent(txt_den, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbVND1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(btn_timkiemsp)
                .addGap(52, 52, 52))
        );

        txt_madmsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_madmspActionPerformed(evt);
            }
        });

        btnTrangChu.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btnTrangChu.setForeground(new java.awt.Color(0, 255, 255));
        btnTrangChu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/icons/trangchu.png"))); // NOI18N
        btnTrangChu.setText("Trang Chủ");
        btnTrangChu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTrangChuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(111, 111, 111)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_masp)
                            .addComponent(txt_tensp, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                            .addComponent(txt_madmsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addGap(18, 18, 18)
                                .addComponent(txt_giasp, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(12, 12, 12)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 945, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnTrangChu)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnTrangChu)
                .addGap(10, 10, 10)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(txt_masp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(25, 25, 25)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txt_tensp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(txt_madmsp, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txt_giasp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(38, 38, 38)
                        .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        tb_danhmuc.addTab("Sản Phẩm", jPanel3);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Mã Danh Mục:");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 0, 51));
        jLabel2.setText("Tên Danh Mục:");

        txt_madm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_madmActionPerformed(evt);
            }
        });

        btn_themdm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_themdm.setForeground(new java.awt.Color(0, 255, 255));
        btn_themdm.setText("Thêm");
        btn_themdm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_themdmActionPerformed(evt);
            }
        });

        btn_xoadm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_xoadm.setForeground(new java.awt.Color(0, 0, 255));
        btn_xoadm.setText("Xóa");
        btn_xoadm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_xoadmActionPerformed(evt);
            }
        });

        btn_suadm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_suadm.setForeground(new java.awt.Color(255, 0, 0));
        btn_suadm.setText("Sửa");
        btn_suadm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_suadmActionPerformed(evt);
            }
        });

        btn_taomoidm.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        btn_taomoidm.setForeground(new java.awt.Color(255, 255, 0));
        btn_taomoidm.setText("Tạo mới");
        btn_taomoidm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_taomoidmActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btn_themdm)
                .addGap(18, 18, 18)
                .addComponent(btn_xoadm)
                .addGap(18, 18, 18)
                .addComponent(btn_suadm)
                .addGap(18, 18, 18)
                .addComponent(btn_taomoidm)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_themdm)
                    .addComponent(btn_taomoidm)
                    .addComponent(btn_suadm)
                    .addComponent(btn_xoadm))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tbl_danhmuc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Mã Danh Mục", "Tên Danh Mục"
            }
        ));
        tbl_danhmuc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbl_danhmucMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbl_danhmuc);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txt_tendm, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txt_madm, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(40, 40, 40))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(412, 412, 412))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txt_madm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txt_tendm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 111, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(68, 68, 68)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(140, 140, 140))
        );

        tb_danhmuc.addTab("Danh Mục", jPanel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(tb_danhmuc, javax.swing.GroupLayout.PREFERRED_SIZE, 915, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 36, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tb_danhmuc)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_themspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themspActionPerformed
        // TODO add your handling code here:
        String tenSP = txt_tensp.getText();
        int maDM = Integer.parseInt(txt_madmsp.getText());
        float giaSP = Float.parseFloat(txt_giasp.getText());

        // Tạo một đối tượng SanPham_model mới
        SanPham_model sp = new SanPham_model();
        sp.setTen_sp(tenSP);
        sp.setMa_dm(maDM);
        sp.setGia_sp(giaSP);

        // Gọi phương thức addSanPham từ đối tượng DAO để thêm sản phẩm vào cơ sở dữ liệu
        ProductDAO dao = new ProductDAO();
        dao.addSanPham(sp);

        // Hiển thị thông báo thành công
        JOptionPane.showMessageDialog(this, "Đã thêm sản phẩm thành công!");

        // Load lại dữ liệu sản phẩm vào bảng
        loadSanPhamToTable();
    }//GEN-LAST:event_btn_themspActionPerformed

    private void btn_xoaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoaspActionPerformed
        // TODO add your handling code here:
        try {
        int selectedRow = tbl_sanpham.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm để xóa!");
            return;
        }
         int idSP = (int) tbl_sanpham.getValueAt(selectedRow, 0); // Giả sử cột đầu tiên là id_sp
        
        // Xóa sản phẩm từ cơ sở dữ liệu bằng id sản phẩm
        ProductDAO dao = new ProductDAO();
        dao.deleteSanPham(idSP);
        
        // Load lại dữ liệu sản phẩm vào bảng
        loadSanPhamToTable();
        
        JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
        // Tiếp tục xử lý xóa sản phẩm ở đây
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi xóa sản phẩm: " + ex.getMessage());
    }
    }//GEN-LAST:event_btn_xoaspActionPerformed

    private void btn_suaspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suaspActionPerformed
        // TODO add your handling code here:
        try {
        // Lấy thông tin từ các trường dữ liệu trên giao diện
        int selectedRow = tbl_sanpham.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm để cập nhật!");
            return;
        }

        int idSP = (int) tbl_sanpham.getValueAt(selectedRow, 0); // Giả sử cột đầu tiên là id_sp
        String tenSP = txt_tensp.getText();
        String maDMText = txt_madmsp.getText();
        
        // Kiểm tra xem maDMText có chứa một giá trị số hợp lệ hay không
        if (maDMText.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập mã danh mục!");
            return;
        }
        
        int maDM = Integer.parseInt(maDMText); // Chuyển đổi từ String sang int
        float giaSP = Float.parseFloat(txt_giasp.getText()); // Chuyển đổi từ String sang float

        // Tạo đối tượng SanPham_model mới
        SanPham_model sp = new SanPham_model();
        sp.setId_sp(idSP);
        sp.setTen_sp(tenSP);
        sp.setMa_dm(maDM);
        sp.setGia_sp(giaSP);

        // Cập nhật thông tin sản phẩm vào cơ sở dữ liệu
        ProductDAO dao = new ProductDAO();
        dao.updateSanPham(sp);

        // Load lại dữ liệu sản phẩm vào bảng
        loadSanPhamToTable();

        JOptionPane.showMessageDialog(this, "Cập nhật sản phẩm thành công!");
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng dữ liệu cho mã danh mục và giá sản phẩm!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi cập nhật sản phẩm: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_btn_suaspActionPerformed

    private void btn_taomoispActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taomoispActionPerformed
        // TODO add your handling code here:
        txt_masp.setText("");
        txt_tensp.setText("");
        txt_madmsp.setText("");
        txt_giasp.setText("");
    }//GEN-LAST:event_btn_taomoispActionPerformed

    private void btn_timkiemspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_timkiemspActionPerformed
        // TODO add your handling code here:
        String keyword = txt_timkiem.getText().trim();
    String giaTuStr = txt_giatu.getText().trim();
    String giaDenStr = txt_den.getText().trim();

    try {
        ProductDAO dao = new ProductDAO();
        List<SanPham_model> sanPhamList;

        // Kiểm tra xem người dùng đã nhập từ khóa tìm kiếm hay chưa
        if (!keyword.isEmpty()) {
            // Tìm kiếm theo từ khóa tên sản phẩm
            sanPhamList = dao.searchSanPhamByName(keyword);
        } else if (!giaTuStr.isEmpty() && !giaDenStr.isEmpty()) {
            // Kiểm tra xem người dùng đã nhập giá từ và giá đến hay chưa
            float giaTu = Float.parseFloat(giaTuStr);
            float giaDen = Float.parseFloat(giaDenStr);
            
            // Tìm kiếm theo phạm vi giá
            sanPhamList = dao.searchSanPhamByPriceRange(giaTu, giaDen);
        } else {
            // Nếu không có từ khóa tìm kiếm hoặc phạm vi giá, không thực hiện tìm kiếm
            JOptionPane.showMessageDialog(this, "Vui lòng nhập từ khóa tìm kiếm hoặc phạm vi giá!");
            return;
        }

        // Xóa toàn bộ dữ liệu trong bảng
        DefaultTableModel model = (DefaultTableModel) tbl_sanpham.getModel();
        model.setRowCount(0);

        // Thêm dữ liệu tìm kiếm vào bảng
        for (SanPham_model sanPham : sanPhamList) {
            Object[] row = {
                sanPham.getId_sp(),
                sanPham.getTen_sp(),
                sanPham.getMa_dm(),
                sanPham.getGia_sp()
            };
            model.addRow(row);
        }

        if (sanPhamList.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm nào phù hợp!");
        }

    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Vui lòng nhập đúng định dạng cho phạm vi giá!");
    } catch (Exception e) {
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi khi tìm kiếm sản phẩm: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_btn_timkiemspActionPerformed
    private void tp_danhmucAncestorAdded(javax.swing.event.AncestorEvent evt) {                                         
            // TODO add your handling code here:
            fillDanhMucToTable();
        } 
    private void tbl_sanphamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_sanphamMouseClicked
        // TODO add your handling code here:
        loadSanPhamToTable();
    }//GEN-LAST:event_tbl_sanphamMouseClicked

    private void btn_themdmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_themdmActionPerformed
        // TODO add your handling code here:
        try {
        // Tạo đối tượng DAO
        ProductDAO dao = new ProductDAO();
        
        // Tạo đối tượng DanhMuc_model và thiết lập tên danh mục
        DanhMuc_model danhMuc = new DanhMuc_model();
        danhMuc.setTen_dm(txt_tendm.getText());
        
        // Thêm danh mục vào cơ sở dữ liệu
        int x = dao.addDanhMuc(danhMuc);
        
        // Kiểm tra kết quả và hiển thị thông báo
        if (x < 0) {
            JOptionPane.showMessageDialog(this, "Thêm thành công");
            
            // Cập nhật lại dữ liệu trên bảng
            fillDanhMucToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm không thành công");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_themdmActionPerformed

    private void btn_xoadmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_xoadmActionPerformed
        // TODO add your handling code here:
        try {
        // Lấy thông tin của danh mục cần xóa từ bảng
        int selectedRow = tbl_danhmuc.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một danh mục để xóa.");
            return;
        }
        
        int idDanhMuc = (int) tbl_danhmuc.getValueAt(selectedRow, 0);
        
        // Tạo đối tượng DAO
        ProductDAO dao = new ProductDAO();
        
        // Thực hiện xóa danh mục
        int x = dao.deleteDanhMuc(idDanhMuc);
        
        // Kiểm tra kết quả và hiển thị thông báo
        if (x < 0) {
            JOptionPane.showMessageDialog(this, "Xóa thành công");
            
            // Cập nhật lại dữ liệu trên bảng
            fillDanhMucToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Xóa không thành công");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_xoadmActionPerformed

    private void btn_suadmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_suadmActionPerformed
        // TODO add your handling code here:
        try {
        // Lấy thông tin của danh mục cần sửa từ bảng
        int selectedRow = tbl_danhmuc.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một danh mục để sửa.");
            return;
        }
        
        int idDanhMuc = (int) tbl_danhmuc.getValueAt(selectedRow, 0);
        String tenDanhMucMoi = txt_tendm.getText();
        
        // Tạo đối tượng DAO
        ProductDAO dao = new ProductDAO();
        
        // Tạo đối tượng DanhMuc_model với thông tin mới
        DanhMuc_model danhMucMoi = new DanhMuc_model(idDanhMuc, tenDanhMucMoi);
        
        // Thực hiện cập nhật thông tin của danh mục
        int x = dao.updateDanhMuc(danhMucMoi);
        
        // Kiểm tra kết quả và hiển thị thông báo
        if (x < 0) {
            JOptionPane.showMessageDialog(this, "Cập nhật thành công");
            
            // Cập nhật lại dữ liệu trên bảng
            fillDanhMucToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật không thành công");
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Đã xảy ra lỗi: " + e.getMessage());
    }
    }//GEN-LAST:event_btn_suadmActionPerformed

    private void btn_taomoidmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_taomoidmActionPerformed
        // TODO add your handling code here:
        txt_madm.setText("");
        txt_tendm.setText("");
    }//GEN-LAST:event_btn_taomoidmActionPerformed

    private void tbl_danhmucMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_danhmucMouseClicked
        // TODO add your handling code here:
        int selectedRow = tbl_danhmuc.getSelectedRow();
    if (selectedRow != -1) {
        // Lấy thông tin của danh mục được chọn từ bảng
        int idDanhMuc = (int) tbl_danhmuc.getValueAt(selectedRow, 0);
        String tenDanhMuc = (String) tbl_danhmuc.getValueAt(selectedRow, 1);
        
        // Hiển thị thông tin lên các trường dữ liệu để chỉnh sửa
        txt_madm.setText(String.valueOf(idDanhMuc));
        txt_tendm.setText(tenDanhMuc);
    }
    }//GEN-LAST:event_tbl_danhmucMouseClicked

    private void txt_madmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_madmActionPerformed
        // TODO add your handling code here:
        updateMaDMForSanPham();
    }//GEN-LAST:event_txt_madmActionPerformed

    private void btnTrangChuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTrangChuActionPerformed
        // TODO add your handling code here:
        QuanLy show = new QuanLy();
        show.setVisible(true);
    }//GEN-LAST:event_btnTrangChuActionPerformed

    private void tb_danhmucAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tb_danhmucAncestorAdded
        // TODO add your handling code here:
        fillDanhMucToTable();
    }//GEN-LAST:event_tb_danhmucAncestorAdded

    private void txt_madmspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_madmspActionPerformed
        // TODO add your handling code here:
        updateMaDMForSanPham();
        
    }//GEN-LAST:event_txt_madmspActionPerformed

    private void tbl_sanphamAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_tbl_sanphamAncestorAdded
        // TODO add your handling code here:
       // loadProductDataForEditing();
    }//GEN-LAST:event_tbl_sanphamAncestorAdded

    private void tbl_sanphamMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbl_sanphamMousePressed
        // TODO add your handling code here:
        loadProductDataForEditing();
    }//GEN-LAST:event_tbl_sanphamMousePressed
                                             
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnTrangChu;
    private javax.swing.JButton btn_suadm;
    private javax.swing.JButton btn_suasp;
    private javax.swing.JButton btn_taomoidm;
    private javax.swing.JButton btn_taomoisp;
    private javax.swing.JButton btn_themdm;
    private javax.swing.JButton btn_themsp;
    private javax.swing.JButton btn_timkiemsp;
    private javax.swing.JButton btn_xoadm;
    private javax.swing.JButton btn_xoasp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private java.awt.Label label1;
    private javax.swing.JLabel lbDen;
    private javax.swing.JLabel lbGiaTu;
    private javax.swing.JLabel lbVND;
    private javax.swing.JLabel lbVND1;
    private javax.swing.JTabbedPane tb_danhmuc;
    private javax.swing.JTable tbl_danhmuc;
    private javax.swing.JTable tbl_sanpham;
    private javax.swing.JTextField txt_den;
    private javax.swing.JTextField txt_giasp;
    private javax.swing.JTextField txt_giatu;
    private javax.swing.JTextField txt_madm;
    private java.awt.TextField txt_madmsp;
    private javax.swing.JTextField txt_masp;
    private javax.swing.JTextField txt_tendm;
    private javax.swing.JTextField txt_tensp;
    private javax.swing.JTextField txt_timkiem;
    // End of variables declaration//GEN-END:variables
    public void fillDanhMucToTable() {
   try {
        tblModel = (DefaultTableModel) tbl_danhmuc.getModel();
        tblModel.setRowCount(0);
        
        ProductDAO dao = new ProductDAO();
        List<DanhMuc_model> list = dao.readAllDanhMuc();
        
        for (DanhMuc_model it : list) {
            Object[] newRow = new Object[] { it.getId_dm(), it.getTen_dm() };
            tblModel.addRow(newRow);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
    }
}
private void loadSanPhamToTable() {
    try {
        // Xóa dữ liệu hiện tại trong bảng
        DefaultTableModel model = (DefaultTableModel) tbl_sanpham.getModel();
        model.setRowCount(0);

        // Gọi phương thức để đọc tất cả sản phẩm từ cơ sở dữ liệu
        ProductDAO dao = new ProductDAO();
        List<SanPham_model> listSP = dao.readAllSanPham();

        // Thêm dữ liệu sản phẩm vào bảng
        for (SanPham_model sp : listSP) {
            Object[] row = {sp.getId_sp(), sp.getTen_sp(), sp.getMa_dm(), sp.getGia_sp()};
            model.addRow(row);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}




private void updateSanPhamTable() {
    try {
        ProductDAO dao = new ProductDAO(); // Khởi tạo đối tượng DAO

        // Xóa toàn bộ dữ liệu trong bảng
        DefaultTableModel model = (DefaultTableModel) tbl_sanpham.getModel();
        model.setRowCount(0);

        // Đọc lại toàn bộ dữ liệu sản phẩm từ cơ sở dữ liệu
        List<SanPham_model> sanPhamList = dao.readAllSanPham();

        // Thêm dữ liệu mới vào bảng
        for (SanPham_model sanPham : sanPhamList) {
            Object[] row = {sanPham.getId_sp(), sanPham.getTen_sp(), sanPham.getMa_dm(), sanPham.getGia_sp()};
            model.addRow(row);
        }
    } catch (Exception ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật bảng sản phẩm: " + ex.getMessage());
    }
}

// TODO add your handling code here for the button that loads product information for editing
private void loadProductDataForEditing() {
    int selectedRow = tbl_sanpham.getSelectedRow();
    if (selectedRow != -1) {
        Object idSPObject = tbl_sanpham.getValueAt(selectedRow, 0);
        Object tenSPObject = tbl_sanpham.getValueAt(selectedRow, 1);
        Object maDMObject = tbl_sanpham.getValueAt(selectedRow, 2);
        Object giaSPObject = tbl_sanpham.getValueAt(selectedRow, 3);

        // Kiểm tra giá trị null trước khi ép kiểu
        if (idSPObject != null && tenSPObject != null && maDMObject != null && giaSPObject != null) {
            int idSP = (int) idSPObject;
            String tenSP = (String) tenSPObject;
            int maDM = (int) maDMObject;
            float giaSP = (float) giaSPObject;

            // Hiển thị thông tin lên các trường dữ liệu để chỉnh sửa
            txt_masp.setText(String.valueOf(idSP));
            txt_tensp.setText(tenSP);
            txt_madmsp.setText(String.valueOf(maDM));
            txt_giasp.setText(String.valueOf(giaSP));
        } else {
            // Xử lý trường hợp giá trị null
        }
    }
}

private void updateMaDMForSanPham() {
    String maDM = txt_madm.getText(); // Lấy mã danh mục từ phần danh mục

    // Cập nhật mã danh mục cho phần sản phẩm
    txt_madmsp.setText(maDM);
}


///////////////////////////////////////////////////
private void addKeyListenersForPriceRange() {
    KeyAdapter keyAdapter = new KeyAdapter() {
        @Override
        public void keyReleased(KeyEvent e) {
            searchByPriceRange();
        }
    };

    txt_giatu.addKeyListener(keyAdapter);
    txt_den.addKeyListener(keyAdapter);
}

private void searchByPriceRange() {
    String giaTuStr = txt_giatu.getText().trim();
    String giaDenStr = txt_den.getText().trim();

    if (giaTuStr.isEmpty() || giaDenStr.isEmpty()) {
        // Nếu một trong hai ô trống, không thực hiện tìm kiếm
        return;
    }

    try {
        float giaTu = Float.parseFloat(giaTuStr);
        float giaDen = Float.parseFloat(giaDenStr);

        ProductDAO dao = new ProductDAO();
        List<SanPham_model> sanPhamList = dao.searchSanPhamByPriceRange(giaTu, giaDen);

        // Xóa toàn bộ dữ liệu trong bảng
        DefaultTableModel model = (DefaultTableModel) tbl_sanpham.getModel();
        model.setRowCount(0);

        // Thêm dữ liệu tìm kiếm vào bảng
        for (SanPham_model sanPham : sanPhamList) {
            Object[] row = {
                sanPham.getId_sp(),
                sanPham.getTen_sp(),
                sanPham.getMa_dm(),
                sanPham.getGia_sp()
            };
            model.addRow(row);
        }

    } catch (NumberFormatException e) {
        // Nếu giá trị nhập không phải là số hợp lệ, bạn có thể hiển thị thông báo hoặc xử lý theo cách khác
        System.err.println("Vui lòng nhập đúng định dạng cho khoảng giá.");
    } catch (Exception e) {
        e.printStackTrace();
    }
}
}
